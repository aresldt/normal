
创建表空间：

create tablespace QMS_DATA

datafile '+data/samedata/datafile/QMS_DATA.dbf' 

size 500m  

autoextend on  

next 500m maxsize unlimited

extent management local;--存储超了，自动扩展。


修改表空间：alter tablespace zqmes add datafile '+data/samedata/datafile/zqmes1.dbf' size 400m autoextend on;


创建用户，密码，表空间，临时表空间。
create user qmsadmin  identified by qms2018 default tablespace QMS_DATA
temporary tablespace temp quota unlimited on QMS_DATA；

分配权限：dba最高（不给）
grant resource,connect,dba to qmsadmin;

alter user el_panel quota unlimited on panel_data; --赋予表空间权限


grant create any view to BISADMIN  --创建视图的权限
ALTER USER   BISADMIN QUOTA UNLIMITED ON  QMS_DATA; --赋予表空间的权限


dba：拥有全部特权，是系统最高权限，只有DBA才可以创建数据库结构。resource：拥有Resource权限的用户只可以创建实体，不可以创建数据库结构。connect：拥有Connect权限的用户只可以登录Oracle，不可以创建实体，不可以创建数据库结构。 

select privilege from dba_sys_privs where grantee='COGNOS' 
union 
select privilege from dba_sys_privs where grantee in (select granted_role from dba_role_privs where grantee='COGNOS' ); --查看用户权限




set feedback off heading off verify off trimspool off
set pagesize 0 linesize 200
define user=test   ---> 这里是新建用户名
select 'grant  '||privilege||'  to &user;' from dba_sys_privs where grantee = 'DBSNMP'
union 
select 'grant  '||privilege||'  to &user;' from dba_sys_privs where grantee in (select granted_role from dba_role_privs where grantee = 'DBSNMP'); 赋予跟谁相同的权限

删除用户：
步骤一：  删除user

drop user ×× cascade

说明： 删除了user，只是删除了该user下的schema objects，是不会删除相应的tablespace的。

步骤二： 删除tablespace

DROP TABLESPACE tablespace_name INCLUDING CONTENTS AND DATAFILES;


select * from dba_data_files;


查看表空间：
autoextend=NO时：maxbytes为0，bytes即为该数据文件的初始化大小，也为该文件最大大小。
autoextend=YES时：如果bytes
                                   如果bytes>maxbytes,则说明该数据文件进行了resize，resize即为该数据文件可使用的最大大小，即使没有达到32G，也无法自动扩展
                                   如果bytes=maxbytes，则该数据文件可使用大小为bytes的值，无法扩展（受maxbytes限制）


修改oracle密码期限：（默认180天）
查看用户的proifle是哪个，一般是default：

    sql>SELECT username,PROFILE FROM dba_users;

    2、查看指定概要文件（如default）的密码有效期设置：

    sql>SELECT * FROM dba_profiles s WHERE s.profile='DEFAULT' AND resource_name='PASSWORD_LIFE_TIME';

    3、将密码有效期由默认的180天修改成“无限制”：

    sql>ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;

    修改之后不需要重启动数据库，会立即生效。

    4、修改后，还没有被提示ORA-28002警告的帐户不会再碰到同样的提示；

    已经被提示的帐户必须再改一次密码，举例如下：中华考试网

    $sqlplus / as sysdba

    sql> alter user smsc identified by <原来的密码> ----不用换新密码






SELECT Upper(F.TABLESPACE_NAME)         "表空间名",
       D.TOT_GROOTTE_MB                 "表空间大小(M)",
       D.TOT_GROOTTE_MB - F.TOTAL_BYTES "已使用空间(M)",
       To_char(Round(( D.TOT_GROOTTE_MB - F.TOTAL_BYTES ) / D.TOT_GROOTTE_MB * 100, 2), '990.99')
       || '%'                           "使用比",
       F.TOTAL_BYTES                    "空闲空间(M)",
       F.MAX_BYTES                      "最大块(M)"
FROM   (SELECT TABLESPACE_NAME,
               Round(Sum(BYTES) / ( 1024 * 1024 ), 2) TOTAL_BYTES,
               Round(Max(BYTES) / ( 1024 * 1024 ), 2) MAX_BYTES
        FROM   SYS.DBA_FREE_SPACE
        GROUP  BY TABLESPACE_NAME) F,
       (SELECT DD.TABLESPACE_NAME,
               Round(Sum(DD.BYTES) / ( 1024 * 1024 ), 2) TOT_GROOTTE_MB
        FROM   SYS.DBA_DATA_FILES DD
        GROUP  BY DD.TABLESPACE_NAME) D
WHERE  D.TABLESPACE_NAME = F.TABLESPACE_NAME
ORDER  BY 1; --查询表空间使用率


 select file_name,autoextensible,increment_by from dba_data_files where tablespace_name LIKE 'UNDO%';  --查询表空间是否自动扩展
 
 create undo tablespace undotbs1 datafile '+DATA/samedata/datafile/undotbs2.dbf' size 5000m reuse autoextend on next 1000m ; 
 select * from v$tablespace; --查询表空间路径
 
 
 --alter database datafile '+DATA/samedata/datafile/undo_big.906.910352389' autoextend on;  --修改表空间为自动扩展
 
 
 --select name from v$datafile;
 
--alter database datafile '+DATA/samedata/datafile/sysaux.269.866470615' resize 40000m


exec dbms_workload_repository.modify_snapshot_settings(interval=>6*60, retention=>5*24*60)
 exec dbms_workload_repository.drop_snapshot_range(33861, 33861, 938307806)

查看死锁andkill
select sess.sid, 

   sess.serial#, 

   lo.oracle_username, 

   lo.os_user_name, 

   ao.object_name, 

   lo.locked_mode 

   from v$locked_object lo, 

   dba_objects ao, 

   v$session sess 

where ao.object_id = lo.object_id and lo.session_id = sess.sid;
alter system kill session '35, 27113';





select * from (
Select a.tablespace_name,
to_char(a.bytes/1024/1024,'999,999.999') total_bytes,
to_char(b.bytes/1024/1024,'999,999.999') free_bytes,
to_char(a.bytes/1024/1024 - b.bytes/1024/1024,'999,999.999') use_bytes,
to_char((1 - b.bytes/a.bytes)*100,'99.99') || '%' use
from (select tablespace_name,
sum(bytes) bytes
from dba_data_files
group by tablespace_name) a,
(select tablespace_name,
sum(bytes) bytes
from dba_free_space
group by tablespace_name) b
where a.tablespace_name = b.tablespace_name
union all
select c.tablespace_name,
to_char(c.bytes/1024/1024,'999,999.999') total_bytes,
to_char( (c.bytes-d.bytes_used)/1024/1024,'999,999.999') free_bytes,
to_char(d.bytes_used/1024/1024,'999,999.999') use_bytes,
to_char(d.bytes_used*100/c.bytes,'99.99') || '%' use
from
(select tablespace_name,sum(bytes) bytes
from dba_temp_files group by tablespace_name) c,
(select tablespace_name,sum(bytes_cached) bytes_used
from v$temp_extent_pool group by tablespace_name) d
where c.tablespace_name = d.tablespace_name
);


alter system set undo_tablespace=undotbs1 scope=both;
